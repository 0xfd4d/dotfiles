#!/bin/sh
#
# wmutils/contrib>: snap.sh, 9/12/15 kekler 
# snaps focued window to the left, right, top, or bottom edge

usage() {
    echo "usage: $(basename $0) <direction>" >&2
    exit 1
}

# default values for gaps and master area
PANEL=${PANEL:-24}
GAP=${GAP:-0}

# get current window id and its borderwidth
PFW=$(pfw)
BW=$(wattr b $PFW)

X=$GAP
Y=$((GAP))

# get root window's size
ROOT=$(lsw -r)
SW=$(wattr w $ROOT)
SH=$(wattr h $ROOT)

# calculate usable screen size (without borders and gaps)
SH=$((SH - PANEL))

# snap back 
SROOT=/tmp/snap

test -d $SROOT || mkdir -p $SROOT

if test -f $SROOT/$PFW; then
    wtp $(cat $SROOT/$PFW)
    rm $SROOT/$PFW
    exit 0
else
    wattr xywhi $PFW > $SROOT/$PFW
fi

snap_up() 
{
    wtp $X $Y $((SW - 2*GAP - 2*BW)) $((SH/2 - 2*BW - GAP - GAP/2)) $PFW
}

snap_right() 
{
    wtp $((SW - SW/2 + X/2)) $Y $((SW/2 - 2*BW - GAP - GAP/2)) $((SH - 2*BW - 2*GAP)) $PFW
}

snap_down() 
{
    wtp $X $((SH - SH/2)) $((SW - 2*GAP - 2*BW)) $((SH/2 - 2*BW - GAP - GAP/2)) $PFW
}

snap_left()
{
    wtp $X $Y $((SW/2 - 2*BW - GAP - GAP/2)) $((SH - 2*BW - 2*GAP)) $PFW
}

case $1 in
    h|a|west|left)  snap_left ;;
    j|s|south|down) snap_down ;;
    k|w|north|up)   snap_up ;;
    l|d|east|right) snap_right ;;
esac

